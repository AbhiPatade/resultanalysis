package javaapplication6;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.text.PDFTextStripper;
import org.apache.pdfbox.text.PDFTextStripperByArea;
import java.util.*;
import java.io.*;
import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author user
 */
public class Result extends javax.swing.JFrame {

    /**
     * Creates new form Result
     */
    File f=null;
    String filename=null;
    public Result() {
        initComponents();
        jTextArea2.setVisible(false);
        jLabel3.setVisible(false);
        jLabel4.setVisible(false);
        jTextField1.setVisible(false);
        jTextField2.setVisible(false);
        searchseat.setVisible(false);
        checkresult.setVisible(false);
        clear.setVisible(false);
        print.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        view = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Choose = new javax.swing.JButton();
        Analyse = new javax.swing.JButton();
        file = new javax.swing.JTextField();
        checkresult = new javax.swing.JButton();
        searchseat = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        resultstatus = new javax.swing.JButton();
        print = new javax.swing.JButton();

        jLabel2.setText("jLabel2");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Result Analysis");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("    Enter Seat No");

        view.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        view.setText("View PDF");
        view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewActionPerformed(evt);
            }
        });

        jTextField2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("    Subject Code");

        Choose.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Choose.setText("Choose");
        Choose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChooseActionPerformed(evt);
            }
        });

        Analyse.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Analyse.setText("Analyse");
        Analyse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnalyseActionPerformed(evt);
            }
        });

        file.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        file.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileActionPerformed(evt);
            }
        });

        checkresult.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        checkresult.setText("Check Result");
        checkresult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkresultActionPerformed(evt);
            }
        });

        searchseat.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        searchseat.setText("Search Seat");
        searchseat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchseatActionPerformed(evt);
            }
        });

        clear.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jTextField1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("Choose PDF File");

        resultstatus.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        resultstatus.setText("Result Status");
        resultstatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultstatusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addGap(29, 29, 29)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(file, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                                        .addComponent(jTextField1))
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(searchseat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(checkresult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Choose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(view, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(resultstatus)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(Analyse, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(file, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Choose))
                        .addGap(35, 35, 35)
                        .addComponent(Analyse)
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchseat))
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(checkresult))
                        .addGap(31, 31, 31)
                        .addComponent(clear)
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(resultstatus)
                            .addComponent(view))
                        .addContainerGap(199, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())))
        );

        print.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        print.setText("Print");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(print)
                .addGap(33, 33, 33))
            .addGroup(layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(print))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ChooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChooseActionPerformed
    
    file.setText("");
    JFileChooser ch=new JFileChooser();     //for choosing file
    ch.showOpenDialog(null);                //show dialog box aftre cilcking choose button
    f=ch.getSelectedFile();                //JFileChooser - method
    filename=f.getAbsolutePath();
    file.setText(filename);        
    if(filename.equals("")){
        JOptionPane.showMessageDialog(this,"Please Select Proper Path of File");
        file.setText("");
        }
    if(filename.matches("(.*).pdf")==false)  /*||filename.matches("(.*).pdf")==false)*/{
        JOptionPane.showMessageDialog(this,"Please select PDF file only");
        file.setText("");
    }
    }//GEN-LAST:event_ChooseActionPerformed

    private void viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewActionPerformed
        if(file.getText().equals("")==false){
        jTextArea2.setVisible(true);
        print.setVisible(true);
        try {
            PDDocument document = PDDocument.load(new File(filename));
            document.getClass();
            if (!document.isEncrypted())
            {
                PDFTextStripperByArea stripper = new PDFTextStripperByArea();
                stripper.setSortByPosition(true);
                PDFTextStripper Tstripper = new PDFTextStripper();
                String str = Tstripper.getText(document);
                Scanner scn = null;
                scn = new Scanner(str);
                String line="";
                jTextArea2.setText(line);
                while(scn.hasNextLine()){
                    line = scn.nextLine();
                    String s="\n"+line;
                    jTextArea2.append(s);
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(Result.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        else
          JOptionPane.showMessageDialog(this,"Please select proper path");
    }//GEN-LAST:event_viewActionPerformed

    private void AnalyseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnalyseActionPerformed
        if(file.getText().equals("")==false){
        jLabel3.setVisible(true);
        jLabel4.setVisible(true);
        jTextField1.setVisible(true);
        jTextField2.setVisible(true);
        searchseat.setVisible(true);
        checkresult.setVisible(true);
        clear.setVisible(true);
        print.setVisible(true);
        }
        else{
        JOptionPane.showMessageDialog(this,"Please select proper path");
        }
    }//GEN-LAST:event_AnalyseActionPerformed

    private void searchseatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchseatActionPerformed
     if(file.getText().equals("")==false){
         jTextArea2.removeAll();
         if(jTextField1.getText().equals("")==true||jTextField1.getText().length()!=10){
             JOptionPane.showMessageDialog(this,"Please Enter proper seat no...");
             jTextField1.setText("");
         }
         else{
             jTextArea2.setVisible(true);
             print.setVisible(true);
        try {
            PDDocument document = PDDocument.load(new File(filename));      //allow to pdf to create,read and enhance the pdf documents 
            document.getClass();
            if (!document.isEncrypted())            //pdf is not in encrypted form
            {
                PDFTextStripperByArea stripper = new PDFTextStripperByArea();
                stripper.setSortByPosition(true);      //The order of the text tokens in a PDF file may not be in the same as they appear visually on the screen
                
                PDFTextStripper Tstripper = new PDFTextStripper();
                String str = Tstripper.getText(document);
                Scanner scn=null;
                scn = new Scanner(str);
                String line="";
                jTextArea2.setText(line);
                int f=0,t=1;
                while(scn.hasNextLine()){
                    line = scn.nextLine();
                    if(line.startsWith(jTextField1.getText())==true&&f==0&&t<33){
                    String s="\n"+line;
                    jTextArea2.append(s);
                    f=1;
                    t++;
                    }
                    if((line.startsWith(" ")==true||line.endsWith(" ")==true)&&f==1&&t<33){
                    String s="\n"+line;
                    jTextArea2.append(s);
                    t++;
                    }
                    if(line.matches("(.*)SGPA(.*)")==true&&f==1&&t<33){
                    String s="\n"+line;
                    jTextArea2.append(s);
                    t++;                    
                    }
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(Result.class.getName()).log(Level.SEVERE, null, ex);
        }
         }
     }
    
    }//GEN-LAST:event_searchseatActionPerformed

    private void checkresultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkresultActionPerformed
      if(jTextField2.getText().equals("")==false){
          jTextArea2.setText("");
          print.setVisible(true);
          try {
              PDDocument document = PDDocument.load(new File(filename));  
              document.getClass();
              if (!document.isEncrypted()){
                  PDFTextStripperByArea stripper = new PDFTextStripperByArea();
                  stripper.setSortByPosition(true);
                  PDFTextStripper Tstripper = new PDFTextStripper();
                  String str = Tstripper.getText(document);
                  Scanner scn = null;
                  scn = new Scanner(str);
                  String line="";
                  jTextArea2.append(line);
                  int n=0,m=0,o=0;
                  while (scn.hasNextLine()){
                      line = scn.nextLine();
                      if(line.startsWith("   "+jTextField2.getText())==true&&line.matches("(.*)FF(.*)")==true){
                          n++;    //fail count
                          m++;    
                      }
                      else if(line.startsWith("   "+jTextField2.getText())==true){
                          m++;   //no of student appeared for exam
                      }
                    /*  if(line.matches("(.*)SGPA : --")==true){
                      o++;
                      }*/
                  }
                  String s="The No. of Student who give exam of subject code = "+jTextField2.getText()+" is "+m;
                  String f="The No. of Student who fails exam of Subject code = "+jTextField2.getText()+" is "+n;
                  String p="The No. of Student who Pass exam of Subject code = "+jTextField2.getText()+" is "+(m-n);
                  //String q="The No. of Student who clear Subject code = "+jTextField2.getText()+" is "+;
                  //String u="The No. of Student who has backlog for Subject code = "+jTextField2.getText()+" is "+o;
                  jTextArea2.append("\n"+s+"\n"+f+"\n"+p);
              }
          } catch (IOException ex) {
              Logger.getLogger(Result.class.getName()).log(Level.SEVERE, null, ex);
          }
         
      }
      else{
          JOptionPane.showMessageDialog(this,"Please enter subject code properly!");
      }
    }//GEN-LAST:event_checkresultActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
      jTextField1.setText("");
        jTextField2.setText("");  // TODO add your handling code here:
    }//GEN-LAST:event_clearActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
      MessageFormat header= new MessageFormat("Result");
        MessageFormat footer= new MessageFormat(" Page{0,number,integer} ");
        try{

            //jTextArea2.print(jTextArea2.PrintMode.FIT_WIDTH,header,footer);
              jTextArea2.print(header, footer);

        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }

    }//GEN-LAST:event_printActionPerformed

    private void resultstatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultstatusActionPerformed
        if(file.getText().equals("")==false){
           jTextArea2.setVisible(true);
        try{
            PDDocument document = PDDocument.load(new File(filename));
            document.getClass();
            int m=0,n=0;
            if (!document.isEncrypted()){
                  PDFTextStripperByArea stripper = new PDFTextStripperByArea();
                  stripper.setSortByPosition(true);
                  PDFTextStripper Tstripper = new PDFTextStripper();
                  String str = Tstripper.getText(document);
                  Scanner scn = null;
                  scn = new Scanner(str);
                  String line="";
                  jTextArea2.setText(line);
                  while(scn.hasNextLine()){
                      line=scn.nextLine();
                      if(line.matches("(.*)SGPA : --(.*)")==true)  //m=backlog
                          m++;
                      if(line.matches("(.*)SGPA(.*)")==true)   //n=total student
                      n++;
                  }
            }
            String l="The no of student are All clear are = "+(n-m);
            String k="The no of students who has backlog are = "+m;
            jTextArea2.append("\n"+l+"\n"+k);
        } catch (IOException ex) {
            Logger.getLogger(Result.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        else{
            JOptionPane.showMessageDialog(this,"Please select proper file");
        }
    }//GEN-LAST:event_resultstatusActionPerformed

    private void fileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Result.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Result.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Result.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Result.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Result().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Analyse;
    private javax.swing.JButton Choose;
    private javax.swing.JButton checkresult;
    private javax.swing.JButton clear;
    private javax.swing.JTextField file;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton print;
    private javax.swing.JButton resultstatus;
    private javax.swing.JButton searchseat;
    private javax.swing.JButton view;
    // End of variables declaration//GEN-END:variables
}
